/*
Deployment script for DataNinjago.Demo.ADFDW.DW

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DataNinjago.Demo.ADFDW.DW"
:setvar DefaultFilePrefix "DataNinjago.Demo.ADFDW.DW"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Starting rebuilding table [prod].[DimCustomer]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [prod].[tmp_ms_xx_DimCustomer] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Code]         INT           NOT NULL,
    [Name]         VARCHAR (50)  NOT NULL,
    [LastModified] DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [prod].[DimCustomer])
    BEGIN
        SET IDENTITY_INSERT [prod].[tmp_ms_xx_DimCustomer] ON;
        INSERT INTO [prod].[tmp_ms_xx_DimCustomer] ([Id], [Code], [Name], [LastModified])
        SELECT   [Id],
                 [Code],
                 [Name],
                 [LastModified]
        FROM     [prod].[DimCustomer]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [prod].[tmp_ms_xx_DimCustomer] OFF;
    END

DROP TABLE [prod].[DimCustomer];

EXECUTE sp_rename N'[prod].[tmp_ms_xx_DimCustomer]', N'DimCustomer';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [prod].[DimMachine]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [prod].[tmp_ms_xx_DimMachine] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Code]         INT           NOT NULL,
    [Name]         VARCHAR (50)  NOT NULL,
    [Condition]    VARCHAR (10)  NOT NULL,
    [CurrentRow]   BIT           NOT NULL,
    [ValidTo]      DATETIME2 (7) NULL,
    [LastModified] DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [prod].[DimMachine])
    BEGIN
        SET IDENTITY_INSERT [prod].[tmp_ms_xx_DimMachine] ON;
        INSERT INTO [prod].[tmp_ms_xx_DimMachine] ([Id], [Code], [Name], [Condition], [CurrentRow], [ValidTo], [LastModified])
        SELECT   [Id],
                 [Code],
                 [Name],
                 [Condition],
                 [CurrentRow],
                 [ValidTo],
                 [LastModified]
        FROM     [prod].[DimMachine]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [prod].[tmp_ms_xx_DimMachine] OFF;
    END

DROP TABLE [prod].[DimMachine];

EXECUTE sp_rename N'[prod].[tmp_ms_xx_DimMachine]', N'DimMachine';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Refreshing [stg].[uspLoadDimCustomer]...';


GO
EXECUTE sp_refreshsqlmodule N'[stg].[uspLoadDimCustomer]';


GO
PRINT N'Update complete.';


GO
